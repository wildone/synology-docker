version: "3.8"

services:

  postgres:
    image: postgres
    hostname: postgres
    restart: always
    depends_on:
      - "traefik"
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
      - ${POSTGRES_CONFIG_FILE}:/etc/postgresql/postgresql.conf
      - ${POSTGRES_DB_ADMIN_CONFIG_CREATEUSER_FILE}:/docker-entrypoint-initdb.d/createuser.sh
      - ${POSTGRES_DB_ADMIN_CONFIG_ALTERUSERPASSWORD_FILE}:/docker-entrypoint-initdb.d/alteruserpassword.sh
      - ${ENV_FILE}:/usr/local/env:ro
    environment:
      - TZ=${GLOBAL_TZ}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=willbeoverwritten
      - ENV_FILE=/usr/local/env
    command: ["postgres", "-c", "log_min_messages=${POSTGRES_LOG_MIN_MESSAGES}"]
    labels:
      traefik.enable: true
      traefik.tcp.services.postgres.loadbalancer.server.port: ${POSTGRES_PORT}
      traefik.tcp.routers.postgres.entrypoints: postgres
      traefik.tcp.routers.postgres.rule: HostSNI(`*`)
      traefik.tcp.routers.postgres.service: postgres
    networks:
      - internal

  postgres-admin:
    image: dpage/pgadmin4
    hostname: postgres-admin
    restart: always
    entrypoint: >
      /bin/sh -c "
      /pgadmin4/pgpassconfig.sh;
      /entrypoint.sh
      "
    depends_on:
      - "postgres"
    ports:
      - ${POSTGRES_DB_ADMIN_PORT}:${POSTGRES_DB_ADMIN_PORT}
    environment:
      - TZ=${GLOBAL_TZ}
      - PGADMIN_LISTEN_PORT=${POSTGRES_DB_ADMIN_PORT}
      - PGADMIN_DEFAULT_EMAIL=${POSTGRES_DB_ADMIN_PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${POSTGRES_DB_ADMIN_PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ${POSTGRES_DB_ADMIN_DATA_PATH}:/var/lib/pgadmin:rw
      - ${POSTGRES_DB_ADMIN_CONFIG_SERVERS_FILE}:/pgadmin4/servers.json
      - ${POSTGRES_DB_ADMIN_CONFIG_PGPASSCONFIG_FILE}:/pgadmin4/pgpassconfig.sh
      - ${ENV_FILE}:/pgadmin4/env:ro
    labels:
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.port: ${POSTGRES_DB_ADMIN_PORT}
      traefik.http.routers.postgresadmin.rule: "Host(`${POSTGRES_DB_ADMIN_SUBDOMAIN_NAME}.${DOMAIN_NAME}`)"
      traefik.http.routers.postgresadmin.entrypoints: web
      traefik.http.routers.postgresadmin_https.rule: "Host(`${POSTGRES_DB_ADMIN_SUBDOMAIN_NAME}.${DOMAIN_NAME}`)"
      traefik.http.routers.postgresadmin_https.tls: true
      traefik.http.routers.postgresadmin_https.entrypoints: websecure
      traefik.http.services.postgresadmin.loadbalancer.passHostHeader: true
      traefik.http.services.postgresadmin.loadbalancer.server.port: ${POSTGRES_DB_ADMIN_PORT}
    networks:
      - internal

  postgres-backup:
    image: postgres
    hostname: postgres-backup
    depends_on:
      - "postgres"
    networks:
      - internal
    volumes:
      - ${POSTGRES_BACKUP_PATH}:/dump
#      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${GLOBAL_TZ}
      - PGHOST=postgres
      - PGUSER=${POSTGRES_DB_USER}
      - PGPASSWORD=${POSTGRES_DB_PASSWORD}
      - BACKUP_NUM_KEEP=7
      - BACKUP_FREQUENCY=1d
    entrypoint: |
      bash -c 'bash -s <<EOF
      trap "break;exit" SIGHUP SIGINT SIGTERM
      sleep 2m
      while /bin/true; do
        pg_dump -Fc > /dump/dump_\`date +%d-%m-%Y"_"%H_%M_%S\`.psql
        (ls -t /dump/dump*.psql|head -n $$BACKUP_NUM_KEEP;ls /dump/dump*.psql)|sort|uniq -u|xargs rm -- {}
        sleep $$BACKUP_FREQUENCY
      done
      EOF'

networks:
  internal:
